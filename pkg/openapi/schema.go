// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	externalRef0 "github.com/unikorn-cloud/core/pkg/openapi"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ufsrmMWPH/8vAAD//xhB31NW7AAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	for rawPath, rawFunc := range externalRef0.PathToRawSpec(path.Join(path.Dir(pathToFile), "https://raw.githubusercontent.com/unikorn-cloud/core/main/pkg/openapi/common.spec.yaml")) {
		if _, ok := res[rawPath]; ok {
			// it is not possible to compare functions in golang, so always overwrite the old value
		}
		res[rawPath] = rawFunc
	}
	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
